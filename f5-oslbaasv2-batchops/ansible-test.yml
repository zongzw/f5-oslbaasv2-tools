- hosts: servers
  remote_user: root
  gather_facts: false
  tasks:
    - name: collect bigip information from partitions
      f5networks.f5_modules.bigip_device_info:
        gather_subset:
          - management-routes
        provider:
          user: admin
          server: "10.250.2.211"
          password: "P@ssw0rd123"
          validate_certs: False
      register: bigip_infos

    - debug: msg="{{ bigip_infos }}"
    # - block:
    #     - debug: msg="{{ j }}, {{ j }}"
    #       with_items: "{{ range(0, 10, 1) }}"
    #       loop_control:
    #         index_var: j
      # with_items: "{{ range(0, 10, 1) }}"
      # loop_control:
      #   index_var: i
    # - block:
    #     - shell: echo zfwefewa-{{ item }}
    #       with_items:
    #         - "{{ range(0, 3, 1) }}"
    #       register: echo_rlt

    #     - debug: msg="{{ echo_rlt }}"

    #     - set_fact:
    #         refs: "{{ refs|default('') }} --sni-container-refs https://afewfawefaw-{{ item }}"
    #       with_items:
    #         - "{{ range(0, 3, 1) }}"

    #     - debug: msg="{{ refs }}"
    #   environment:
    #     A: sdfs
    # - name: calling block with conditional on loop
    #   include_tasks: task-create-resource-group.yml
    #   loop: ['world','universe']
 
    # - debug: msg="debug {{item[0]}} {{item[1]}}"
    #   delegate_to: localhost
    #   with_nested:
    #     - "{{ range(0 , 2, 1) | list }}"
    #     - "{{ range(0 , 4, 1) | list }}"

    # - debug: msg="hello test."
    # - set_fact:
    #     index_pj: 10

    # - name: mysql query all names of resources
    #   community.mysql.mysql_query:
    #     login_host: "{{ neutrondb_hostname }}"
    #     login_user: neutron
    #     login_password: "{{ neutrondb_password }}"
    #     login_db: "{{ neutrondb_database }}"
    #     query: 
    #       - select name, provisioning_status from lbaas_loadbalancers where name like "lb-%";
    #       - select name, provisioning_status from lbaas_pools where name like "pl-{{ index_pj }}-%";
    #       - select name, provisioning_status from lbaas_healthmonitors where name like "hm-{{ index_pj }}-%";
    #       - select name, provisioning_status from lbaas_listeners where name like "ls-{{ index_pj }}-%";
    #       - select name, provisioning_status from lbaas_members where name like "mb-{{ index_pj }}-%";
    #   register: resource_names

    # - set_fact:
    #     lbs: "{{ resource_names.query_result[0] | map(attribute='name') | list }}"
    #     pls: "{{ resource_names.query_result[1] | map(attribute='name') | list }}"
    #     hms: "{{ resource_names.query_result[2] | map(attribute='name') | list }}"
    #     lss: "{{ resource_names.query_result[3] | map(attribute='name') | list }}"
    #     mbs: "{{ resource_names.query_result[4] | map(attribute='name') | list }}"


    # - debug: msg="{{ resource_names }}"
    # # - debug: msg="{{ lbs }}"


    # - debug: msg="in"
    #   with_items: 
    #     - [1, 2, 3]
    #   when: "'lb-' + (index_pj | string) in lbs"

    # - debug: msg="not in"

    #   with_items: 
    #     - [1, 2, 3]
    #   when: "'106' in lbs"